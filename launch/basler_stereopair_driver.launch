<launch>

    <!-- defines name of the namespace of the drone -->
    <arg name="UAV_NAME" default="$(env UAV_NAME)"/>
    <arg name="RUN_TYPE" default="$(env RUN_TYPE)"/>

    <!-- set to false if the nodelet should run under an external nodelet manager -->
    <arg name="standalone" default="true"/>

    <!-- allows disabling the gui from command line -->
    <arg name="gui" default="true"/>

    <!-- if camera is calibrated or not -->
    <arg name="is_calibrated" default="true"/>
    <!--  right now there are two algorithms for a stereo pair calibration,
    but both of them relay on apriltag detector.
    First one is a pose minimisation of 3d tags detected by apriltag detector
    Second is a PnP problem solver from corners data from the same apriltag detector
    3d and PnP modes.-->
    <arg name="calib_algo" default="3d"/>

    <!-- will it run using GNU debugger? -->
    <arg name="debug" default="false"/>
    <arg unless="$(arg debug)" name="launch_prefix_debug" value=""/>
    <arg if="$(arg debug)" name="launch_prefix_debug" value="debug_roslaunch"/>

    <!-- will it run as standalone nodelet or using a nodelet manager? -->
    <arg name="manager" default="$(arg UAV_NAME)_basler_stereopair_driver_manager"/>
    <arg if="$(arg standalone)" name="nodelet" value="standalone"/>
    <arg unless="$(arg standalone)" name="nodelet" value="load"/>
    <arg if="$(arg standalone)" name="nodelet_manager" value=""/>
    <arg unless="$(arg standalone)" name="nodelet_manager" value="$(arg manager)"/>

    <!--  -->
    <arg name="stereopair_base_frame_id" default="$(arg UAV_NAME)/basler_stereopair/base"/>
    <arg name="camera1_fleft_pose" default="/$(arg UAV_NAME)/basler_stereopair/camera1_fleft_pose"/>
    <arg name="camera2_fright_pose" default="/$(arg UAV_NAME)/basler_stereopair/camera2_fright_pose"/>

    <!-- Namespace - all topics and parameters will be remapped using this namespace as a prefix (eg.: "/vision_example/image_in" to "/uavN/vision_example/image_in") -->
    <group ns="$(arg UAV_NAME)">

        <!-- ClASS_NAME nodelet -->
        <node pkg="nodelet"
              type="nodelet"
              name="basler_stereo_driver"
              args="$(arg nodelet) basler_stereo_driver/BaslerStereoDriver $(arg nodelet_manager)"
              launch-prefix="$(arg launch_prefix_debug)"
              output="screen">

            <!-- Parameters loaded from launch file -->
            <param name="gui" type="bool" value="$(arg gui)"/>

            <param name="UAV_NAME" type="string" value="$(arg UAV_NAME)"/>
            <param name="is_calibrated" type="bool" value="$(arg is_calibrated)"/>
            <param name="calib_algo" type="string" value="$(arg calib_algo)"/>
            <param name="fleft_tag_det" type="string" value="/$(arg UAV_NAME)/fleft/tag_detections"/>
            <param name="fright_tag_det" type="string" value="/$(arg UAV_NAME)/fright/tag_detections"/>
            <param name="base_frame_pose" type="string" value="$(arg stereopair_base_frame_id)"/>
            <param name="m_name_CL" type="string" value="$(arg UAV_NAME)/basler_left_optical"/>
            <param name="m_name_CR" type="string" value="$(arg UAV_NAME)/basler_right_optical"/>
            <param name="m_name_frame_CL" type="string" value="$(arg UAV_NAME)/basler_left_frame"/>
            <param name="m_name_frame_CR" type="string" value="$(arg UAV_NAME)/basler_right_frame"/>
            <param name="camera1_fleft_pose" type="string" value="$(arg camera1_fleft_pose)"/>
            <param name="camera2_fright_pose" type="string" value="$(arg camera2_fright_pose)"/>

            <param name="camera_poses_filename" type="string"
                   value="$(find basler_stereopair_driver)/config/camera_poses.yaml"/>
            <!-- ROS parameters config file -->
            <rosparam file="$(find basler_stereopair_driver)/config/camera_poses.yaml"/>
            <rosparam file="$(find basler_stereopair_driver)/config/camera_calibrations/basler_left.yaml"
              ns="fleft/camera"/>
            <rosparam file="$(find basler_stereopair_driver)/config/camera_calibrations/basler_right.yaml"
              ns="fright/camera"/>

            <!-- Subscribers (note that the topic names will also be remapped using the namespace as a prefix) -->

            <!-- Publishers (note that the topic names will also be remapped using the namespace as a prefix) -->

        </node>
        
        <node pkg="tf" type="static_transform_publisher" name="camera1_fleft_pose" args="0.083 0.083 0 0 0 0.3827 0.9239 $(arg stereopair_base_frame_id) $(arg UAV_NAME)/basler_left_frame 100" />
        <node pkg="tf" type="static_transform_publisher" name="fleft_optical" args="0 0 0 -0.5 0.5 -0.5 0.5 $(arg UAV_NAME)/basler_left_frame $(arg UAV_NAME)/basler_left_optical 100" />

        <!-- if stereo pair is not calibrated - publish a static transformation-->
        <node unless="$(arg is_calibrated)" pkg="tf" type="static_transform_publisher" name="camera2_fright_pose" args="0.083 -0.083 0 0 0 -0.3827 0.9239 $(arg stereopair_base_frame_id) $(arg UAV_NAME)/basler_right_frame 100" />
        <node unless="$(arg is_calibrated)" pkg="tf" type="static_transform_publisher" name="fright_optical" args="0 0 0 -0.5 0.5 -0.5 0.5 $(arg UAV_NAME)/basler_right_frame $(arg UAV_NAME)/basler_right_optical 100"/>

        <group ns="fleft" unless="$(arg is_calibrated)">
            <include file="$(find apriltag_ros)/launch/continuous_detection.launch">
              <arg name="camera_name" value="fleft/camera"/>
                <arg name="image_topic" value="image_rect"/>
            </include>
            <node pkg="topic_tools" type="relay"
              args="/$(arg UAV_NAME)/fleft/camera/camera_info  fleft/camera/camera_info" name="in2in"/>
            <node pkg="topic_tools" type="relay" args="/$(arg UAV_NAME)/fleft/camera/image_rect  fleft/camera/image_rect"
                  name="im2im"/>
        </group>

        <group ns="fright" unless="$(arg is_calibrated)">
            <include file="$(find apriltag_ros)/launch/continuous_detection.launch">
              <arg name="camera_name" value="fright/camera"/>
                <arg name="image_topic" value="image_rect"/>
            </include>
            <node pkg="topic_tools" type="relay"
              args="/$(arg UAV_NAME)/fright/camera/camera_info  fright/camera/camera_info" name="in2in"/>
            <node pkg="topic_tools" type="relay"
              args="/$(arg UAV_NAME)/fright/camera/image_rect  fright/camera/image_rect" name="im2im"/>
        </group>

    </group>

</launch>
